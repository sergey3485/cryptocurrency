import { GetServerSideProps, NextPage } from 'next';
import { useRouter } from 'next/router';
import * as React from 'react';
import Head from 'next/head';
import NextLink from 'next/link';
import { useQuery, QueryClient, dehydrate } from 'react-query';

import { CoreLayout } from '@/layouts/core/CoreLayout';
import { Stats } from '@/components/Stats';
import { Coin } from '@/components/Coin';
import { CoinStats } from '@/components/CoinStats';
import * as Breadcrumbs from '@/components/system/Breadcrumbs';

import { FullCoinInformation, fetchCoin } from '@/modules/cryptocurrencies/api';

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { coinId } = context.query;

  const queryClient = new QueryClient();

  await queryClient.prefetchQuery(['coin', coinId], () => fetchCoin(coinId as string));

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};

const CoinPage: NextPage = () => {
  const router = useRouter();
  const { coinId } = router.query;

  const query = useQuery(['coin', coinId], async () => {
    const data = await fetch(`/api/cryptocurrencies/${coinId as string}`);
    const fetchedCoin = await data.json() as FullCoinInformation;

    return fetchedCoin;
  });

  const min24 = (data: string[] | undefined): string | undefined => {
    if (data !== undefined) {
      const newData = data.map((item) => Number(item));

      return Math.min(...newData).toFixed(2);
    }

    return undefined;
  };

  const max24 = (data: string[] | undefined): string | undefined => {
    if (data !== undefined) {
      const newData = data.map((item) => Number(item));

      return Math.max(...newData).toFixed(2);
    }

    return undefined;
  };

  return (
    <CoreLayout>
      <Head>
        <title>Cryptocurrencies | {query.data?.name}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Breadcrumbs.Root>
        <Breadcrumbs.Item>
          <NextLink href="/cryptocurrencies" passHref>
            <Breadcrumbs.Link>
              Cryptocurrencies
            </Breadcrumbs.Link>
          </NextLink>
        </Breadcrumbs.Item>

        <Breadcrumbs.Separator>/</Breadcrumbs.Separator>

        <Breadcrumbs.Item>
          <NextLink href="/cryptocurrencies/coins" passHref>
            <Breadcrumbs.Link>
              Coins
            </Breadcrumbs.Link>
          </NextLink>
        </Breadcrumbs.Item>

        <Breadcrumbs.Separator>/</Breadcrumbs.Separator>

        <Breadcrumbs.Item>{query.data?.name}</Breadcrumbs.Item>
      </Breadcrumbs.Root>

      <Coin
        coin={query.data?.name ?? ''}
        value={Number(query.data?.price).toFixed(2) ?? ''}
        rank={query.data?.rank ?? 0}
        change={Number(query.data?.change).toFixed(2) ?? ''}
        iconUrl={query.data?.iconUrl ?? ''}
      />

      <Stats rate1="0.50" rate2="-0.76" rate3="8.75" />

      <CoinStats
        coinUrl={query.data?.iconUrl ?? ''}
        coin={query.data?.symbol ?? ''}
        price={Number(query.data?.price).toFixed(2) ?? ''}
        priceChange={Number(query.data?.change).toFixed(2) ?? ''}
        rank={query.data?.rank ?? 0}
        low={min24(query.data?.sparkline) ?? ''}
        high={max24(query.data?.sparkline) ?? ''}
        volume={Number(query.data?.['24hVolume']).toFixed(2) ?? ''}
        marketCap={Number(query.data?.marketCap).toFixed(2) ?? ''}
      />
    </CoreLayout>
  );
};

export default CoinPage;
